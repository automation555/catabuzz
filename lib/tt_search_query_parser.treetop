grammar TTSearchQuery
#	rule string
#		 '"' (!'"' . / '\"')* '"'
#	end
	
#	rule query
#		string / 'aa'
#	end
	
#	rule weekdayz
#		[Mm] / [Tt] / [Ww] / [Rr] / [Ff] / [Ss] / "TBA" / "tba" / "Tba" / "tBa" / "tbA"
#	end
	
	rule search_query_root
		query seq:(s query)* 
		{
			def value
				seq.elements.inject(query.value) { |sum, el|
			      sum + " " + el.query.value
			    }
				
			end
		}
	end
	
	rule query
		code / weekdays / timerange
	end
	
	rule weekdays
		("TBA" / "tba" / "Tba" / "tBa" / "tbA" / "TBa" / "TbA" / "tBA" / [Mm] / [Tt] / [Ww] / [Rr] / [Ff] / [Ss])+
		{
			def value
				"days:#{text_value.upcase}"
			end
		}
	end
	
	rule code
		[a-zA-Z]+ [0-9]+ [a-zA-z]*
		{
			def value
				"code:#{text_value.upcase}"
			end
		}
	end

    rule dept
        [A-Z] [A-Z]+
        {
            def value
                "department_name:*#{text_value}*"
            end
        }
    end

    rule timerange
        start_time:([0-9] [0-9] [0-9] [0-9]?) [ \t]* "-" [ \t]* end_time:([0-9] [0-9] [0-9] [0-9]?)  
        {
            def value
                s = start_time.text_value.to_i
                e = end_time.text_value.to_i
                if e > s
                    "start_time:( >= #{s} ) end_time:( <= #{e} )"
                else
                    ""
                end

            end
        }
    end
	
	rule s
		[ \t\n\r]+
	end
	
end
